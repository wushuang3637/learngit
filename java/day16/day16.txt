复习:
set集合: 无序   唯一
HashSet:  特点 无序  唯一
       底层原理: HashMap   基于数组+链表+红黑树
       底层会把元素全部存在不同Hash桶中，不同的HashCode对应的值
       会存在不同桶中 先判断==   判断是否是同一个对象
       再HashCode如果 相同存在同一个桶中, 再判断equals 判断值是否一致
       如果值相同 替换原来的值  如果不同  不能替换 在对应哈希桶中
       拼一个链表   如果链表大于8  转换成红黑树   红黑树 小于6
       转换会链表
TreeSet:  元素唯一  支持自然排序
          基本类型  默认从小到大
          String    按照字符位数去排序
          对象      默认不支持排序
                    但是可以实现比较器对象

1.Comparable:  内部比较  在比较类中实现该接口 重写CompareTo()
2.Comparator:  外部比较  实现方式很多  定义一个类实现接口  重写方法
Compare()   还可以通过匿名内部类   lambda  方式    相比第一种更灵活

map集合： 无序   基于 键（key）-值(value) 方式存储   key是唯一

HashMap:   线程不安全  效率高    key 允许为null
           扩容机制  默认大小是16  扩容方式2倍
HashTable: 线程安全    效率低    key 不允许为null
           扩容机制  默认大小是11  扩容方式2倍+1
TreeMap:   是TreeSet 底层实现   类似于 TreeSet用法


Object:  本身是java所有类的父类
本身提供很多方法:
toString:  转换成字符串
equals:  一般情况下 只用于比较引用地址是否一致  类似于==
         但是也有特殊情况 Integer  存储[-128~127]
         如果超过范围也可以存储
         相当于每次 new Integer(128)
         String 的特殊情况  因为String 重写了Object的equals方法
         主要用法是:比较里面的值是否一致，会先把里面值转换成HashCode
         如果HashCode相同  在比较String 变成char[]  比较每一个字符是否一致
         如果HashCode不同   认为是不同的元素
         因为 在Java中  值相同 转换HashCode一定相同  但是反过来不行
HashCode: 用于获取哈希码
什么是哈希码?:一般用于表示对象的基本特征, 一般是由32位二进制数构成
一般有几种哈希码:
Integer类: 保存的对应的数值
Object类的对象: 保存的就是对象的引用地址 通过算法生成的数字
String类:  包含了 字符串本身的内容 通过一些特定算法生成出来的数字

notify:    唤醒处于等待状态的一个线程(随机的一个线程)
notifyAll:  唤醒处于等待状态的所有线程
wait();     线程等待  进入等待池
getClass(): 获取一个类的class对象
      new User()   通过User类 获取的类的对象
      getClass     获取类对象
clone();   克隆对象   Java创建对象一种方式
java 有几种创建对象的方式:
1. new    2.克隆     3. 反射   4. 反序列化
哪些是通过构造方法创建对象哪些不是?
调用构造的:   1  new     3.反射   newIntance()
不调用的:  2克隆: 相当于把已经存在堆内存中的对象 复制一遍
           4反序列化: 通过本地文件 读取出来 生成一个Java对象


